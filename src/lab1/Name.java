package lab1;/**   A class that represents a person's name.   Appendix B version.   @author Frank M. Carrano   @version 3.0*/public class Name{	private String first; // first name	private String last;  // last name	public Name()	{	} // end default constructor	// 1)  define the toString method	public String toString()	{		return first + last;	}			// 2)  define the explicit constructor				// 3)  define getFirst, getLast, setFirst, setLast methods				// 4)  define giveLastNameTo  so that the 	//     host Name assigns its last name to argument Name			// 5)  run test 5 in main and observe the output	//       are the two objects (friend and jamie) aliased?		// 6)  follow instructions in main test6			    public static void main(String[] args)     {        /***********  test 1 No-arg Constructor, toString **********        Name jane = new Name();        System.out.println("jane = " + jane + " (should show nothing)");                   //***********  END test 1 ***********************************/        /***********  test 2 Explicit Constructor ******************        Name jamie = new Name("Jamie", "Jones");        System.out.println("jamie = " + jamie + " (should say Jamie Jones)");                  //***********  END test 2 ***********************************/        /***********  test 3 getters and setters ********************                jane.setFirst("Jane");        jane.setLast("Doe");        System.out.println("Now jane = " + jane + " (should say Jane Doe)");                   System.out.println(  jamie.getFirst() + " is a proud member of the "                            + jamie.getLast() + " Family");                        //***********  END test 3 ***********************************/        /***********  test 4 giveLastNameTo *******************        System.out.println("Jamie Jones adopts Jill Doe and changes Jill's last name:");                jamie.giveLastNameTo(jane);        System.out.println("After name change: ");                System.out.println("jamie = " + jamie + " (should say Jamie Jones)");        System.out.println("jane = " + jane + " (should say Jane Jones)");                    //***********  end test 4 *********************************/        /***********  test 5 Test for aliasing ********************        //******(one object referred to by two vars) **************        System.out.println("Testing aliases:");        System.out.println("\n\nLet jamie and friend be aliases. ");        Name friend = jamie;                System.out.println("\nChange jamie's last name to Smith: ");        jamie.setLast("Smith");        System.out.println(jamie);        System.out.println("\nHere is friend's last name: ");        System.out.println(friend.getLast());                System.out.println("Testing aliases:");        if (jamie == friend)            System.out.println("friend and jamie are aliases" );        else            System.out.println("friend and jamie are NOT aliases" );        System.out. println("\n\nDone.");                        //***********  end test 5 *********************************        /***********  test 6 array of names *********************************        // A) create an array of 5 Name objects called invitationList        // B) store jamie and jane in the first two cells of the array        // C) put three more Name objects into the array        // D) write a loop that prints all of the name objects in the array                // E) write a loop that changes all the last names         //    of the Name objects in the array to "Simpson"                // F) print out the array of names again.                //***********  end test 6 *********************************/    }  // end main		} // end Name